{"version":3,"sources":["components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/layout/Layout.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","App.js","index.js"],"names":["LoadingSpinner","className","classes","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","module","exports","QuoteItem","props","item","text","author","to","QuoteList","quotes","ascending","navigate","useNavigate","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","useEffect","length","MainNavigation","header","logo","nav","navData","isActive","active","Layout","main","children","NewCommentForm","commentTextRef","useRef","onAddedComment","submitFormHandler","event","preventDefault","enteredText","current","value","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","CommentsList","comments","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","NewQuote","React","lazy","QuoteDetail","NotFound","App","fallback","path","element","replace","ReactDOM","render","document","getElementById"],"mappings":"8IAAA,4BAMeA,IAJQ,WACrB,OAAO,qBAAKC,UAAWC,IAAQC,SACjC,C,0ECFA,SAASC,EAAYC,EAAOC,GAC1B,MAAoB,SAAhBA,EAAOC,KACF,CACLC,KAAM,KACNC,MAAO,KACPC,OAAQ,WAIQ,YAAhBJ,EAAOC,KACF,CACLC,KAAMF,EAAOK,aACbF,MAAO,KACPC,OAAQ,aAIQ,UAAhBJ,EAAOC,KACF,CACLC,KAAM,KACNC,MAAOH,EAAOM,aACdF,OAAQ,aAILL,CACT,CA+BeQ,IA7Bf,SAAiBC,GAA4C,IAA3BC,EAAgB,wDAChD,EAA8BC,qBAAWZ,EAAa,CACpDM,OAAQK,EAAmB,UAAY,KACvCP,KAAM,KACNC,MAAO,OACP,mBAJKQ,EAAS,KAAEC,EAAQ,KAMpBC,EAAcC,sBAAW,iDAC7B,WAAgBC,GAAW,iFACE,OAA3BH,EAAS,CAAEX,KAAM,SAAU,kBAEEO,EAAgBO,GAAa,KAAD,EAAjDV,EAAY,OAClBO,EAAS,CAAEX,KAAM,UAAWI,iBAAgB,gDAE5CO,EAAS,CACPX,KAAM,QACNK,aAAc,KAAMU,SAAW,0BAC9B,yDAEN,mDAZ4B,GAa7B,CAACR,IAGH,OAAO,aACLK,eACGF,EAEP,C,mOCzDMM,EAAkB,2DAEjB,SAAeC,IAAY,+BAoBjC,sDApBM,sHACkBC,MAAM,GAAD,OAAIF,EAAe,iBAAgB,KAAD,EAAhD,OAARG,EAAQ,gBACKA,EAASC,OAAO,KAAD,EAAxB,GAAJnB,EAAI,OAELkB,EAASE,GAAG,CAAD,qBACR,IAAIC,MAAMrB,EAAKc,SAAW,2BAA2B,KAAD,EAK5D,IAAWQ,KAFLC,EAAoB,GAERvB,EACVwB,EAAQ,aACZC,GAAIH,GACDtB,EAAKsB,IAGVC,EAAkBG,KAAKF,GACxB,yBAEMD,GAAiB,6CACzB,sBAEM,SAAeI,EAAe,GAAD,+BAcnC,sDAdM,WAA8BC,GAAO,qGACnBX,MAAM,GAAD,OAAIF,EAAe,mBAAWa,EAAO,UAAS,KAAD,EAA3D,OAARV,EAAQ,gBACKA,EAASC,OAAO,KAAD,EAAxB,GAAJnB,EAAI,OAELkB,EAASE,GAAG,CAAD,qBACR,IAAIC,MAAMrB,EAAKc,SAAW,0BAA0B,KAAD,EAKlD,OAFHe,EAAW,aACfJ,GAAIG,GACD5B,GAAI,kBAGF6B,GAAW,6CACnB,sBAEM,SAAeC,EAAS,GAAD,+BAe7B,sDAfM,WAAwBC,GAAS,mGACfd,MAAM,GAAD,OAAIF,EAAe,gBAAgB,CAC7DiB,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBAEjB,KAAD,EANY,OAARlB,EAAQ,gBAOKA,EAASC,OAAO,KAAD,EAAxB,GAAJnB,EAAI,OAELkB,EAASE,GAAG,CAAD,qBACR,IAAIC,MAAMrB,EAAKc,SAAW,2BAA2B,KAAD,2BAGrD,MAAI,4CACZ,sBAEM,SAAeuB,EAAW,GAAD,+BAe/B,sDAfM,WAA0BxB,GAAW,mGACnBI,MAAM,GAAD,OAAIF,EAAe,qBAAaF,EAAYe,QAAO,SAAS,CACtFI,OAAQ,OACRC,KAAMC,KAAKC,UAAUtB,EAAYyB,aACjCF,QAAS,CACP,eAAgB,sBAEjB,KAAD,EANY,OAARlB,EAAQ,gBAOKA,EAASC,OAAO,KAAD,EAAxB,GAAJnB,EAAI,OAELkB,EAASE,GAAG,CAAD,qBACR,IAAIC,MAAMrB,EAAKc,SAAW,0BAA0B,KAAD,2BAGpD,CAAEyB,UAAWvC,EAAKwC,OAAM,4CAChC,sBAEM,SAAeC,EAAe,GAAD,+BAqBnC,sDArBM,WAA8Bb,GAAO,yGACnBX,MAAM,GAAD,OAAIF,EAAe,qBAAaa,EAAO,UAAS,KAAD,EAA7D,OAARV,EAAQ,gBAEKA,EAASC,OAAO,KAAD,EAAxB,GAAJnB,EAAI,OAELkB,EAASE,GAAG,CAAD,qBACR,IAAIC,MAAMrB,EAAKc,SAAW,2BAA2B,KAAD,EAK5D,IAAWQ,KAFLoB,EAAsB,GAEV1C,EACV2C,EAAU,aACdlB,GAAIH,GACDtB,EAAKsB,IAGVoB,EAAoBhB,KAAKiB,GAC1B,yBAEMD,GAAmB,6CAC3B,sB,qBC9FDE,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,+B,wBCAzID,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,gC,mBCApJD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2B,mBCA3DD,EAAOC,QAAU,CAAC,KAAO,wB,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,gC,kBCA5BD,EAAOC,QAAU,CAAC,SAAW,gC,kBCA7BD,EAAOC,QAAU,CAAC,KAAO,qB,kBCAzBD,EAAOC,QAAU,CAAC,SAAW,2B,kBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,kBCAzBD,EAAOC,QAAU,CAAC,SAAW,+B,gJCmBdC,EAhBG,SAACC,GACjB,OACE,qBAAItD,UAAWC,IAAQsD,KAAK,UAC1B,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAI,CAACzD,UAAU,MAAM0D,GAAE,kBAAaJ,EAAMtB,IAAK,+BAKtD,E,iBCmCe2B,EArCG,SAACL,GACjB,IAXkBM,EAAQC,EAWpBC,EAAWC,cACXC,EAAWC,cAIXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAlBYV,EAkBcN,EAAMM,OAlBZC,EAkBoBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOxC,GAAKyC,EAAOzC,GAAK,GAAK,EAE7BwC,EAAOxC,GAAKyC,EAAOzC,GAAK,GAAK,CAExC,KAmBA,OACE,eAAC,WAAQ,WACP,qBAAKhC,UAAWC,IAAQyE,QAAQ,SAC9B,yBAAQC,QATe,WAC3Bb,EAASE,EAASY,SAAU,CAC1BR,OAAO,SAAD,OAAWF,EAAqB,OAAS,QAEnD,EAK4C,kBAC9BA,EAAqB,aAAe,iBAG9C,oBAAIlE,UAAWC,IAAQ4E,KAAK,SACzBP,EAAaQ,KAAI,SAACC,GAAK,OACtB,cAAC,EAAS,CAER/C,GAAI+C,EAAM/C,GACVyB,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAM/C,GAIX,QAKZ,E,yBCpCegD,EAXO,WACpB,OACE,sBAAKhF,UAAWC,IAAQgF,SAAS,UAC/B,iDACA,cAAC,IAAI,CAACjF,UAAU,MAAM0D,GAAG,aAAY,2BAK3C,E,gBCwBewB,EA7BG,WAChB,MAA2DtE,YACzDW,KACA,GAFML,EAAW,EAAXA,YAAaT,EAAM,EAANA,OAAc0E,EAAY,EAAlB5E,KAAoBC,EAAK,EAALA,MASjD,OAJA4E,qBAAU,WACRlE,GACF,GAAG,CAACA,IAEW,YAAXT,EAEA,qBAAKT,UAAU,WAAU,SACvB,cAACD,EAAA,EAAc,MAKjBS,EACK,mBAAGR,UAAU,mBAAkB,SAAEQ,IAG3B,cAAXC,GAA4B0E,GAAwC,IAAxBA,EAAaE,OAItD,cAAC,EAAS,CAACzB,OAAQuB,IAHjB,cAAC,EAAa,GAIzB,E,kCCTeG,EAtBQ,WACrB,OACE,yBAAQtF,UAAWC,IAAQsF,OAAO,UAChC,qBAAKvF,UAAWC,IAAQuF,KAAK,0BAC7B,qBAAKxF,UAAWC,IAAQwF,IAAI,SAC1B,+BACE,6BACE,cAAC,IAAO,CAAC/B,GAAG,UAAU1D,UAAW,SAAA0F,GAAO,OAAIA,EAAQC,SAAW1F,IAAQ2F,OAAS,EAAE,EAAE,0BAItF,6BACE,cAAC,IAAO,CAAClC,GAAG,aAAa1D,UAAW,SAAA0F,GAAO,OAAIA,EAAQC,SAAW1F,IAAQ2F,OAAS,EAAE,EAAE,kCAQnG,ECVeC,EATA,SAACvC,GACd,OACE,eAAC,WAAQ,WACP,cAAC,EAAc,IACf,sBAAMtD,UAAWC,IAAQ6F,KAAK,SAAExC,EAAMyC,aAG5C,E,yCCoCeC,EAzCQ,SAAC1C,GACtB,IAAM2C,EAAiBC,mBAEvB,EAAuCtF,YAAQgC,KAAvC1B,EAAW,EAAXA,YAAaT,EAAM,EAANA,OAAQD,EAAK,EAALA,MAErB2F,EAAmB7C,EAAnB6C,eAERf,qBAAU,WACO,cAAX3E,GAA2BD,GAC7B2F,GAEJ,GAAG,CAAC1F,EAAQD,EAAO2F,IAEnB,IAAMC,EAAoB,SAACC,GACzBA,EAAMC,iBAEN,IAAMC,EAAcN,EAAeO,QAAQC,MAI3CvF,EAAY,CAAE2B,YAAa,CAAEW,KAAM+C,GAAepE,QAASmB,EAAMnB,SACnE,EAEA,OACE,uBAAMnC,UAAWC,IAAQyG,KAAMC,SAAUP,EAAkB,UAC7C,YAAX3F,GACC,qBAAKT,UAAU,WAAU,SACvB,cAACD,EAAA,EAAc,MAGnB,sBAAKC,UAAWC,IAAQ2G,QAASD,SAAUP,EAAkB,UAC3D,uBAAOS,QAAQ,UAAS,0BACxB,0BAAU7E,GAAG,UAAU8E,KAAK,IAAIC,IAAKd,OAEvC,qBAAKjG,UAAWC,IAAQ+G,QAAQ,SAC9B,wBAAQhH,UAAU,MAAK,6BAI/B,E,iBCpCeiH,EARK,SAAC3D,GACnB,OACE,oBAAItD,UAAWC,IAAQsD,KAAK,SAC1B,4BAAID,EAAME,QAGhB,E,iBCKe0D,EAVM,SAAC5D,GACpB,OACE,oBAAItD,UAAWC,IAAQkH,SAAS,SAC7B7D,EAAM6D,SAASrC,KAAI,SAACsC,GAAO,OAC1B,cAAC,EAAW,CAAkB5D,KAAM4D,EAAQ5D,MAA1B4D,EAAQpF,GAA0B,KAI5D,EC2DeqF,EA5DE,WACf,MAA8CC,oBAAS,GAAM,mBAAtDC,EAAe,KAAEC,EAAkB,KAGlCrF,EAFOsF,cAEPtF,QAER,EAAsDvB,YAAQoC,KAAtD9B,EAAW,EAAXA,YAAaT,EAAM,EAANA,OAAciH,EAAc,EAApBnH,KAE7B6E,qBAAU,WACRlE,EAAYiB,EACd,GAAG,CAACA,EAASjB,IAEb,IAQIiG,EAJEQ,EAAsBxG,uBAAY,WACtCD,EAAYiB,EACd,GAAG,CAACjB,EAAaiB,IAuBjB,MAnBe,YAAX1B,IACF0G,EACE,qBAAKnH,UAAU,WAAU,SACvB,cAACD,EAAA,EAAc,OAKN,cAAXU,GAA0BiH,GAAkBA,EAAerC,OAAS,IACtE8B,EAAW,cAAC,EAAY,CAACA,SAAUO,KAIxB,cAAXjH,GACEiH,GAA4C,IAA1BA,EAAerC,SAEnC8B,EAAW,mBAAGnH,UAAU,WAAU,0CAIlC,0BAASA,UAAWC,IAAQkH,SAAS,UACnC,gDACEI,GACA,wBAAQvH,UAAU,MAAM2E,QAjCC,WAC7B6C,GAAmB,EACrB,EA+B8D,2BAIzDD,GACC,cAAC,EAAc,CACbpF,QAASA,EACTgE,eAAgBwB,IAGnBR,IAGP,EC5DMS,EAAWC,IAAMC,MAAK,kBAAM,4BAA0B,IACtDC,EAAcF,IAAMC,MAAK,kBAAM,4BAA6B,IAC5DE,EAAWH,IAAMC,MAAK,kBAAM,4BAA0B,IAmC7CG,MAlCf,WACE,OACE,cAAC,EAAM,UACL,cAAC,WAAQ,CACPC,SACE,qBAAKlI,UAAU,WAAU,SACvB,cAACD,EAAA,EAAc,MAElB,SAED,eAAC,IAAM,WACL,cAAC,IAAK,CAACoI,KAAK,IAAIC,QAAS,cAAC,IAAQ,CAACC,SAAO,EAAC3E,GAAG,cAC9C,cAAC,IAAK,CAACyE,KAAK,UAAUC,QAAS,cAAC,EAAS,MACzC,eAAC,IAAK,CAACD,KAAK,mBAAmBC,QAAS,cAACL,EAAW,IAAI,UACtD,cAAC,IAAK,CACJI,KAAK,GACLC,QACE,qBAAKpI,UAAU,WAAU,SACvB,cAAC,IAAI,CAACA,UAAU,YAAY0D,GAAE,WAAa,+BAMjD,cAAC,IAAK,CAACyE,KAAI,WAAcC,QAAS,cAAC,EAAQ,SAE7C,cAAC,IAAK,CAACD,KAAK,aAAaC,QAAS,cAACR,EAAQ,MAC3C,cAAC,IAAK,CAACO,KAAK,IAAIC,QAAS,cAACJ,EAAQ,YAK5C,ECrCAM,IAASC,OACP,cAAC,IAAa,UACZ,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.04f36a40.chunk.js","sourcesContent":["import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://react-complete-7681e-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","import { Link } from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    navigate(location.pathname, {\n      search: `?sort=${isSortingAscending ? 'desc' : 'asc'}`,\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\n\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useEffect } from 'react';\n\nimport QuoteList from '../components/quotes/QuoteList';\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\nimport useHttp from '../hooks/use-http';\nimport { getAllQuotes } from '../lib/api';\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\n    getAllQuotes,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === 'pending') {\n    return (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className='centered focused'>{error}</p>;\n  }\n\n  if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import { NavLink } from 'react-router-dom';\n\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to='/quotes' className={navData => navData.isActive ? classes.active : '' }>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='/new-quote' className={navData => navData.isActive ? classes.active : '' }>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport classes from './Layout.module.css';\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === 'pending') {\n    comments = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === 'completed' &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className='centered'>No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, { Suspense } from \"react\";\nimport { Route, Routes, Navigate, Link } from \"react-router-dom\";\n\nimport AllQuotes from \"./pages/AllQuotes\";\nimport Layout from \"./components/layout/Layout\";\nimport Comments from \"./components/comments/Comments\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\n\nconst NewQuote = React.lazy(() => import(\"./pages/NewQuote\"));\nconst QuoteDetail = React.lazy(() => import(\"./pages/QuoteDetail\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\nfunction App() {\n  return (\n    <Layout>\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <Routes>\n          <Route path=\"/\" element={<Navigate replace to=\"/quotes\" />} />\n          <Route path=\"/quotes\" element={<AllQuotes />} />\n          <Route path=\"/quotes/:quoteId\" element={<QuoteDetail />}>\n            <Route\n              path=\"\"\n              element={\n                <div className=\"centered\">\n                  <Link className=\"btn--flat\" to={`comments`}>\n                    Load Comments\n                  </Link>\n                </div>\n              }\n            />\n            <Route path={`comments`} element={<Comments />} />\n          </Route>\n          <Route path=\"/new-quote\" element={<NewQuote />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Suspense>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}